#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : cHTMLColoring
 major_version : 28
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x186d0a720254c75c
 internal_properties : CAAAAAgAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  type_code : 10
  p_codes :
   -
     code : |1-
      
      // cXMLColoring class
      // Class derived from cColoring the syntactic coloring of XML
      cHTMLColoring is Class
      	inh√©rits of cColoring
      	
      	m_sCurrentAttribute is string  = ""
      END
     type : 131072
  procedures :
   -
     name : Constructor
     internal_properties : CAAAAAgAAABialoRbs5l4VnnXFTjjLsIX5obfil6JQWv6g0t/jXjE9Et/DVPSUj7F5e8NE7e+Y5Q/JDqSYzWGxhrZMenUfeHqiWSSZQUOiExeK0EnxA9+r/afBRm4RPkI5DQiwJomakZado8OcwRrfwQtoYd8qSgTlNwKe4Yc7mZUnAejq2k5ngbjiCzBMTE7eRx02hHYSuwAiop1SUH/FfuB/hKZZ1Tfznz0vrw9M3lXI7+7zgg2ywWVsaHJ6MbFrf1xLMiwANo1Gc6SSNLR1hCdGjxBNSctGBTAwfLOrlWUosIQU09XVcx7g/aVQB+E6nROnvAWQFmfDsSKZO22PpSiS26FJf4NpR85ddwxvkQYQWm9U9N2IKuUptlyQq7aDDUrNOsnIVD7L/1B00d9Ks5GlU02XK3A2rQec74XHdpiT017RDkrqhaskBlBOT6zcrYZN8Q1tFUZMSO5iYPws1Of+jpG6wekWwAnLV3xO8TG6DNwmb+S2/rKmMMNj4Bk5HK7eUSh8oAomf61sNWrIUb2utUwJUgs0jLqitO75aChwVbjqK47IVhWvEXHJzeRZDq5yKOnGGZySLMeWVp5wWRQRInzrNsWNGM8XHXpKa9BR5uO5smLqvyyeHbGnV9Rc4Q+KkENvpdYEHPkVDtlDR1tJEDi6gnqnYYooDAWUUdx/NRdx3rICpDCTmNce1BG3VfSvpLuDEfa1YxrDq2ADXnAnusakJg7J+f4MSXVmUhp8hA8O8+wczWAqkKBeV4Q0cjcmBMp4W7StTBpmR5utddTCQAuJc6ZaufzBfVN751X1hZ8wm4jvM125YbdO944wGi/SmbjbhaoL7Cwd/1Am50TeyQdZBbaTOreI1ZvUznfzlm4+UIYQjU3rc8IBLVdqwb6R218heobuIJ6j2LIks1LVRK/K8ibnr0WwSa3mHYQu3egoZH9nC+vDBXvbXC/OJ3qpqL+Ic3uTXGjYV/SrN10E0H0aaX6XCCPw7YkVq9c/AYPNLdLFyieCeKvggT6CKLdqZmGwp49rhjB8N19l/U/36iwkxpbauhEH3ruQY1i1zV0bY=
     procedure_id : 1760074514153457516
     type_code : 27
     code : |1-
      PROCEDURE Constructor(LOCAL sCode is string = "")
      
      // Call the constructor
      Constructor cColoring(sCode)
      
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      // Global variables to modify if overload
      
      //				  [Start1, 			End1],  [Start2,	End2], ...
      L_COMMENT		= [["<!--", 		"-->"	]]																					// A comment is enclosed between <!-- and -->
      L_STRING			= [[""""	, 		""""	] , ["&" , ";"] ]													// A string starts with " and it ends with " or it is also text between tag
      L_PROPERTY			= [["<"	, 		">"	], ["<"	, 		" "	],  ["/"	, ">"], ["data-", "="], [":",">"]]	
      L_ESC				= ""																										// No escape character
      VariableReset(L_HYPHEN)																										// No hyphenation	
      
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
      // Style of coloring to modify if overload
      
      //					  Font, 		  Size, 	Italic, 	Bold, Underlined, Color
      S_DEFAULT			= ["monospace"	, 9, 		False, 		False, False, 	Black]
      S_STRING			= ["monospace"	, 9, 		False, 		False, False, 	RGB(26,26,166)]
      S_URL_STRING		= ["monospace"	, 9, 		False, 		False, True, 	RGB(0,0,238)]
      S_COMMENT		= ["monospace"	, 9, 		False, 		False, False, 	RGB(35,110,37)]
      S_CONSTANT			= ["monospace"	, 9, 		True, 		False, False, 	RGB(192, 192, 192)]
      S_ERROR			= ["monospace"	, 9, 		False, 		False, False, 	Black]
      S_FUNCTION			= ["monospace"	, 9, 		False, 		True, False, 	RGB(153,69,0)]
      S_KEYWORD			= ["monospace"	, 9, 		False, 		False, False, 	Black]
      S_NUMERIC			= ["monospace"	, 9, 		False, 		False, False, 	LightRed]
      S_PROPERTY			= ["monospace"	, 9, 		True, 		False, False, 	RGB(136,18,128)]
      S_SYMBOL			= ["monospace"	, 9, 		False, 		False, False, 	Black]
      S_VARIABLE			= ["monospace"	, 9, 		False, 		False, False, 	DarkRed]		
      
      //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
      // Define the XML language
      
      _LANGUAGE_ 	is array of 0 cColoring::LANGUAGE
      
      // Save the constants
      Add(_LANGUAGE_,  [MARK_LANG_CONSTANT, [...
      "<!DOCTYPE html" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01//EN"" ""http://www.w3.org/TR/html4/strict.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"" ""http://www.w3.org/TR/html4/loose.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Frameset//EN"" ""http://www.w3.org/TR/html4/frameset.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.0//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.0 Frameset//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML 1.1//EN"" ""http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"">" 	,...
      "<!DOCTYPE HTML PUBLIC ""-//W3C//DTD XHTML Basic 1.1//EN"" ""http://www.w3.org/TR/xhtml-basic/xhtml-basic11.dtd"">" 	,...
      ]])			
      
      // Defines the functions
      Add(_LANGUAGE_,  [MARK_LANG_FUNCTION, [ ...
      "accept="...
      ,"accept-charset="...
      ,"accesskey="...
      ,"action="...
      ,"align="...
      ,"alt="...
      ,"async="...
      ,"autocomplete="...
      ,"auto-focus="...
      ,"autoplay="...
      ,"bgcolor="...
      ,"border="...
      ,"buffered="...
      ,"challenge="...
      ,"charset="...
      ,"checked="...
      ,"cite="...
      ,"class="...
      ,"code="...
      ,"codebase="...
      ,"color="...
      ,"cols="...
      ,"colspan="...
      ,"content="...
      ,"contenteditable="...
      ,"contextmenu="...
      ,"controls="...
      ,"coords="...
      ,"data="...
      ,"data-custom="...
      ,"datetime="...
      ,"default="...
      ,"defer="...
      ,"dir_="...
      ,"dirname="...
      ,"disabled="...
      ,"download="...
      ,"draggable="...
      ,"dropzone="...
      ,"enctype="...
      ,"for="...
      ,"form="...
      ,"headers="...
      ,"height="...
      ,"hidden="...
      ,"high="...
      ,"href="...
      ,"hreflang="...
      ,"http-equiv="...
      ,"icon="...
      ,"id="...
      ,"ismap="...
      ,"itemprop="...
      ,"typecle="...
      ,"kind="...
      ,"label="...
      ,"lang="...
      ,"language="...
      ,"list="...
      ,"loop="...
      ,"low="...
      ,"manifest="...
      ,"max="...
      ,"maxlength="...
      ,"media="...
      ,"method="...
      ,"min="...
      ,"multiple="...
      ,"name="...
      ,"novalidate="...
      ,"onabort="...
      ,"onblur="...
      ,"oncancel="...
      ,"oncanplay="...
      ,"oncanplaythrough="...
      ,"onchange="...
      ,"onclick="...
      ,"onclose="...
      ,"oncontextmenu="...
      ,"oncuechange="...
      ,"ondblclick="...
      ,"ondrag="...
      ,"ondragend="...
      ,"ondragenter="...
      ,"ondragexit="...
      ,"ondragleave="...
      ,"ondragover="...
      ,"ondragstart="...
      ,"ondrop="...
      ,"ondurationchange="...
      ,"onemptied="...
      ,"onended="...
      ,"onerror="...
      ,"onfocus="...
      ,"oninput="...
      ,"oninvalid="...
      ,"onkeydown="...
      ,"onkeypress="...
      ,"onkeyup="...
      ,"onload="...
      ,"onloadeddata="...
      ,"onloadedmetadata="...
      ,"onloadstart="...
      ,"onmousedown="...
      ,"onmouseenter="...
      ,"onmouseleave="...
      ,"onmousemove="...
      ,"onmouseout="...
      ,"onmouseover="...
      ,"onmouseup="...
      ,"onmousewheel="...
      ,"onpause="...
      ,"onplay="...
      ,"onplaying="...
      ,"onprogress="...
      ,"onratechange="...
      ,"onreset="...
      ,"onscroll="...
      ,"onseeked="...
      ,"onseeking="...
      ,"onselect="...
      ,"onshow="...
      ,"onsort="...
      ,"onstalled="...
      ,"onsubmit="...
      ,"onsuspend="...
      ,"ontimeupdate="...
      ,"onvolumechange="...
      ,"onwaiting="...		
      ,"open="...
      ,"optimum="...
      ,"pattern="...
      ,"ping="...
      ,"placeholder="...
      ,"poster="...
      ,"preload="...
      ,"pubdate="...
      ,"radiogroup="...
      ,"readonly="...
      ,"rel="...
      ,"required="...
      ,"reversed="...
      ,"rows="...
      ,"rowspan="...
      ,"sandbox="...
      ,"orthoverifie="...
      ,"scope="...
      ,"scoped="...
      ,"seamless="...
      ,"selected="...
      ,"shape="...
      ,"size="...
      ,"sizes="...
      ,"span="...
      ,"src="...
      ,"srcdoc="...
      ,"srclang="...
      ,"start="...
      ,"step="...
      ,"style="...
      ,"summary="...
      ,"tabindex="...
      ,"target="...
      ,"title="...
      ,"type="...
      ,"usemap="...
      ,"value="...
      ,"width="...
      ,"wrap="...
      
      //other attribute
      ]])		
      
      // Not used:
      // MARK_LANG_SYMBOL	
      // MARK_LANG_PROPERTY	
      // MARK_LANG_FUNCTION	
      // MARK_LANG_VARIABLE	
      // MARK_LANG_KEYWORD		
      
      // Defines the language to use	
      SetLanguage(_LANGUAGE_)
     type : 589824
   -
     name : Destructor
     procedure_id : 1760074514153523052
     type_code : 28
     code : |1+
      PROCEDURE Destructor()
      
     type : 655360
   -
     name : ProcessMarkBeforeAddition
     internal_properties : CAAAAAgAAAAqfDrgriaTsNKnoAgwYHq/YBDVaIPdjeR1VEo/vzFcOGRJ3cJSZZ8PG6l3iF2SwOIJ5Kz9k7gF+y7kHyJ9kOiyf4Gl6ZSxsH3J0o4OXMu3LZ/R6PhT8uLCOdoLDGeu/5VyBBzyGltKMtMa629WkCiEXPdkF9BB3bcZIms8d/TFHbUUK8MzJhfF8wTcGJbHMBgvc6K7iw==
     procedure_id : 1760074514153588588
     type_code : 12
     code : |1-
      // Summary: Processes a marker before the addition
      // Syntax:
      //ProcessMarkBeforeAddition (<pstMarker> is MARKER dynamic)
      //
      // Parameters:
      //	pstMarker (MARKER dynamic): Marker to process
      // Return value:
      // 	None
      //
      PROCEDURE PROTECTED VIRTUAL ProcessMarkBeforeAddition(pstMarker is cColoring::MARKER dynamic <useful>)
      
      IF pstMarker.nMarker=MARK_STRING _AND_ m_sCurrentAttribute IN ("src","href") THEN	
      	//applies the style of URL style
      	pstMarker.nMarker = MARK_URL_STRING
      	//removes the quotes from the underline
      	pstMarker.nLength-=2
      	pstMarker.nPosition++
      	RETURN
      END
      
      m_sCurrentAttribute = ""
      
      //in html removes the = of symbol from the attributes
      nSize is int = Length(pstMarker.sReplacement)
      IF nSize<2 RETURN
      
      //in order for the "=" not to have the same color as the attribute
      IF pstMarker.sReplacement[[nSize]] = "=" THEN
      	pstMarker.sReplacement = pstMarker.sReplacement[[1 TO nSize-1]]
      	pstMarker.nLength--
      	
      	//current attribute
      	m_sCurrentAttribute =  pstMarker.sReplacement
      END
     type : 458752
   -
     name : LineSeparator
     procedure_id : 1760074514153654124
     type_code : 12
     code : |1-
      // Summary: Returns the character used as line separator
      // Syntax:
      //[ <Result> = ] LineSeparator ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	ANSI string: Character used as line separator
      //
      PROCEDURE PROTECTED VIRTUAL LineSeparator() : string ANSI
      RESULT CR
     type : 458752
   -
     name : StringDelimiterAllowSpace
     procedure_id : 1760074514153719660
     type_code : 12
     code : |1-
      // Summary: Checks whether the character is allowed as string delimiter
      // Syntax:
      //[ <Result> = ] StringDelimiterAllowSpace (<sCharacter> is ANSI string)
      //
      // Parameters:
      //	sCharacter (ANSI string): Character to check
      // Return value:
      // 	boolean: True if the character is an authorized delimiter, False otherwise
      //
      PROCEDURE PROTECTED VIRTUAL StringDelimiterAllowSpace(LOCAL sCharacter is string ANSI)
      
      // The &<code>; entities are considered as being strings without space
      RESULT (sCharacter <> "&")
     type : 458752
   -
     name : MarkerEmptyLemme
     procedure_id : 1760074514153785196
     type_code : 12
     code : |1-
      // Summary: Adds an empty lemme
      // Syntax:
      //MarkerEmptyLemme ()
      //
      // Parameters:
      //	None
      // Return value:
      // 	None
      //
      PROCEDURE PROTECTED VIRTUAL MarkerEmptyLemme()
     type : 458752
   -
     name : StartStringAllowed
     procedure_id : 1760074514153850732
     type_code : 12
     code : |1-
      // Summary: Checks whether the character is allowed at the beginning of string
      // Syntax:
      //[ <Result> = ] BeginOfStringAuthorized (<sCharacter> is ANSI string)
      //
      // Parameters:
      //	sCharacter (ANSI string): Character to check
      // Return value:
      // 	boolean: True if the character is allowed, False otherwise
      //
      PROCEDURE PROTECTED VIRTUAL StartStringAllowed(LOCAL sCharacter is string ANSI)
      RESULT (cColoring::IsALetter(sCharacter) _OR_ sCharacter IN ("_", "$", "#", "/"))
     type : 458752
   -
     name : EndStringAllowed
     procedure_id : 1760074514153916268
     type_code : 12
     code : |1-
      // Summary: Checks whether the character is allowed at the end of string
      // Syntax:
      //[ <Result> = ] EndOfStringAuthorized (<sCharacter> is ANSI string)
      //
      // Parameters:
      //	sCharacter (ANSI string): Character to check
      // Return value:
      // 	boolean: True if the character is allowed, False otherwise
      //
      PROCEDURE PROTECTED VIRTUAL EndStringAllowed(LOCAL sCharacter is string ANSI)
      RESULT (sCharacter IN ("_", "$", "#", "=", ">"))
     type : 458752
   -
     name : StringContentAllowed
     procedure_id : 1760074514153981804
     type_code : 12
     code : |1-
      // Summary: Defines whether a character is allowed
      // Syntax:
      //[ <Result> = ] StringContentAuthorized (<sCharacter> is ANSI string, <sNext> is ANSI string)
      //
      // Parameters:
      //	sCharacter (ANSI string): Current character
      //	sNext (ANSI string): Next character
      // Return value:
      // 	boolean: True if the content is allowed, False otherwise
      //
      PROCEDURE PROTECTED VIRTUAL StringContentAllowed(LOCAL sCharacter is string ANSI, LOCAL sNext is string ANSI <useful>)
      
      IF cColoring::IsALetter(sCharacter) _OR_ cColoring::IsANumber(sCharacter) THEN	
      	RESULT True	
      END
      
      RESULT False
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : CClasse1
resources :
 string_res :
  identifier : 0x126681ab0078b061
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
